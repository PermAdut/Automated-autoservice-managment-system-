-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Users"
(
    id bigserial NOT NULL,
    "roleId" bigint NOT NULL,
    login character varying NOT NULL,
    name character varying NOT NULL,
    "surName" character varying NOT NULL,
    email character varying(100) NOT NULL,
    phone character varying(20) NOT NULL,
    "passwordHash" text NOT NULL,
    "createdAt" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT NULL,
    PRIMARY KEY (id),
    CONSTRAINT "unique" UNIQUE (email, login, phone)
);

CREATE TABLE IF NOT EXISTS public."Passport"
(
    id bigserial NOT NULL,
    "userId" bigint NOT NULL,
    "identityNumber" character varying NOT NULL,
    nationality character varying NOT NULL,
    "birthDate" timestamp without time zone NOT NULL,
    gender "char" NOT NULL,
    "expirationDate" timestamp without time zone NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Suppliers"
(
    id bigserial NOT NULL,
    name character varying(100) NOT NULL,
    contact character varying(100),
    address text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."WorkSchedule"
(
    id bigserial NOT NULL,
    "employeeId" bigint NOT NULL,
    "startTime" timestamp without time zone NOT NULL,
    "endTime" timestamp without time zone NOT NULL,
    "isAvailable" boolean NOT NULL DEFAULT TRUE,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Employees"
(
    id bigserial NOT NULL,
    "positionId" bigint NOT NULL,
    "hireDate" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    salary numeric NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Position"
(
    id bigserial NOT NULL,
    name character varying NOT NULL,
    description text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Store"
(
    id bigserial NOT NULL,
    location character varying(50) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Services"
(
    id bigserial NOT NULL,
    name character varying NOT NULL,
    description character varying,
    price numeric NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Cars"
(
    id bigserial NOT NULL,
    "userId" bigint NOT NULL,
    name character varying NOT NULL,
    information text,
    year bigint NOT NULL,
    vin character varying NOT NULL,
    "licensePlate" character varying,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Subscriptions"
(
    id bigserial NOT NULL,
    "userId" bigint NOT NULL,
    "subscriptionDescription" text,
    "subscriptonName" character varying NOT NULL,
    "dateStart" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "dateEnd" timestamp without time zone NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Payment"
(
    id bigserial NOT NULL,
    "orderId" bigint NOT NULL,
    amount numeric NOT NULL,
    status boolean NOT NULL,
    "paymentDate" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "paymentMethod" character varying(50) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."PositionsForBuying"
(
    id bigserial NOT NULL,
    "supplierId" bigint NOT NULL,
    quantity bigint NOT NULL,
    "deliveryDate" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    status character varying(20) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."SparePart"
(
    id bigserial NOT NULL,
    name character varying NOT NULL,
    "partNumber" character varying NOT NULL,
    price numeric NOT NULL,
    "categoryId" bigint NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Orders"
(
    id bigserial NOT NULL,
    "userId" bigint NOT NULL,
    "carId" bigint NOT NULL,
    "employeeId" bigint NOT NULL,
    status character varying(20),
    "createdAt" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT NULL,
    "completedAt" timestamp without time zone DEFAULT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Reviews"
(
    id bigserial NOT NULL,
    "userId" bigint NOT NULL,
    description text,
    rate bigint NOT NULL,
    "createdAt" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT NULL,
    "deletedAt" timestamp without time zone DEFAULT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Role"
(
    id bigserial NOT NULL,
    name character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Categories"
(
    id bigserial NOT NULL,
    name character varying(50) NOT NULL,
    description text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Services_Orders"
(
    "servicesId" bigint NOT NULL,
    "orderId" bigint NOT NULL,
    quantity bigint NOT NULL DEFAULT 1
);

CREATE TABLE IF NOT EXISTS public."Invoices"
(
    id bigserial NOT NULL,
    "positionForBuyingId" bigint NOT NULL,
    amount numeric NOT NULL,
    "invoiceDate" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    status character varying(20) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."SparePart_Store"
(
    "sparePartId" bigint NOT NULL,
    "storeId" bigint NOT NULL,
    quantity bigint DEFAULT 1
);

CREATE TABLE IF NOT EXISTS public."SparePart_Orders"
(
    "sparePartId" bigint NOT NULL,
    "ordersId" bigint NOT NULL,
    quantity bigint DEFAULT 1
);

ALTER TABLE IF EXISTS public."Users"
    ADD FOREIGN KEY ("roleId")
    REFERENCES public."Role" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Passport"
    ADD FOREIGN KEY ("userId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."WorkSchedule"
    ADD FOREIGN KEY ("employeeId")
    REFERENCES public."Employees" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Employees"
    ADD FOREIGN KEY ("positionId")
    REFERENCES public."Position" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Cars"
    ADD FOREIGN KEY ("userId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Subscriptions"
    ADD FOREIGN KEY ("userId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Payment"
    ADD FOREIGN KEY ("orderId")
    REFERENCES public."Orders" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PositionsForBuying"
    ADD FOREIGN KEY ("supplierId")
    REFERENCES public."Suppliers" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SparePart"
    ADD FOREIGN KEY ("categoryId")
    REFERENCES public."Categories" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Orders"
    ADD FOREIGN KEY ("userId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Orders"
    ADD FOREIGN KEY ("carId")
    REFERENCES public."Cars" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Orders"
    ADD FOREIGN KEY ("employeeId")
    REFERENCES public."Employees" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Reviews"
    ADD FOREIGN KEY ("userId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Services_Orders"
    ADD CONSTRAINT services FOREIGN KEY ("servicesId")
    REFERENCES public."Services" (id) MATCH FULL
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS fki_services
    ON public."Services_Orders"("servicesId");


ALTER TABLE IF EXISTS public."Services_Orders"
    ADD CONSTRAINT "order" FOREIGN KEY ("orderId")
    REFERENCES public."Orders" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Invoices"
    ADD FOREIGN KEY ("positionForBuyingId")
    REFERENCES public."PositionsForBuying" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SparePart_Store"
    ADD CONSTRAINT "sparePart" FOREIGN KEY ("sparePartId")
    REFERENCES public."SparePart" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SparePart_Store"
    ADD CONSTRAINT store FOREIGN KEY ("storeId")
    REFERENCES public."Store" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SparePart_Orders"
    ADD CONSTRAINT "sparePart" FOREIGN KEY ("sparePartId")
    REFERENCES public."SparePart" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SparePart_Orders"
    ADD CONSTRAINT orders FOREIGN KEY ("ordersId")
    REFERENCES public."Orders" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;